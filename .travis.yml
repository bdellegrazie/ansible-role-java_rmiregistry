---
dist: trusty
sudo: required

language:
  - ruby

env:
  matrix:
    - distro=centos6 init=/sbin/init dockerfile=docker/centos-6.docker.erb run_opts=""

services:
  - docker

before_install:
  - pip install pre-commit
  - 'sudo docker build -f ${dockerfile} -t bdellegrazie/docker-${distro}-ansible:latest .'

install:
  - pre-commit install
  - bundle install --without=development --binstubs=vendor/bin --path=vendor/bundle

script:
  - pre-commit run --all-files
  - container_id=$(mktemp)

  # Run container in detached state.
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} bdellegrazie/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Execute tests
  - 'export KITCHEN_CONTAINER_ID=$(cat ${container_id}) ; vendor/bin/rspec -I test/integration/default/serverspec -P "test/integration/default/**/*_spec.rb"'

after_success:
  # Clean up.
  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
