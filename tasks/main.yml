---
- name: Override service manager based on OS
  include_vars: "{{ lookup('first_found', params) }}"
  ignore_errors: true
  vars:
    params:
      files:
        - "setup-{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        - "setup-family-{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version }}.yml"
        - "setup-family-{{ ansible_os_family | lower }}.yml"
      paths:
        - "vars"
      skip: true

- name: Service Manager Specific Variables
  include_vars: "{{ lookup('first_found', params) }}"
  ignore_errors: true
  vars:
    params:
      files:
        - "setup-{{ java_rmiregistry_service_mgr }}.yml"
        - "setup-{{ ansible_service_mgr }}.yml"
        - "setup-systemd.yml"
      paths:
        - "vars"
      skip: true

- name: Install Tools
  become: true
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ java_rmiregistry_tools }}"

- name: Startup Defaults
  become: true
  template:
    dest: /etc/default/rmiregistry
    group: root
    mode: '0644'
    owner: root
    src: rmiregistry.default.j2
  notify:
    - systemd daemon reload
    - restart rmiregistry

- name: Startup Script
  become: true
  template:
    dest: "{{ java_rmiregistry_service_path }}"
    group: root
    mode: "{{ java_rmiregistry_service_mode }}"
    owner: root
    src: "{{ java_rmiregistry_service_template }}"
  notify:
    - systemd daemon reload
    - restart rmiregistry

# Required for correct handling of systemd
- meta: flush_handlers

- name: Manage Service
  become: true
  service:
    name: rmiregistry
    enabled: "{{ java_rmiregistry_service_enable }}"
    use: "{{ java_rmiregistry_service_mgr }}"
  when: java_rmiregistry_service_manage
